{"version":3,"sources":["helpers/fetch.js","types/types.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/ui/Navbar.js","helpers/calendarMessagesEspa√±ol.js","components/calendar/CalendarEvent.js","actions/ui.js","helpers/prepareEvents.js","actions/events.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","router/PrivateRoute.js","router/PublicRoute.js","router/AppRouter.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducers.js","store/store.js","CalendarApp.js","index.js"],"names":["baseUrl","process","fetchWithOutToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchWithToken","token","localStorage","getItem","types","checkingFinish","type","login","user","payload","startLogout","dispatch","clear","useForm","initialState","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","vEmail","vPassword","isFormValid","setIsFormValid","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword1","rPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","e","email","password","preventDefault","validator","isEmail","trim","length","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","autoComplete","onChange","Navbar","useSelector","state","auth","onClick","messages","allDay","previous","next","today","month","week","day","agenda","date","time","event","noEventsInRange","showMore","total","CalendarEvent","title","uiOpenModal","prepareEvents","events","map","end","moment","toDate","start","eventAddNew","eventsClearActiveEvent","eventUpdated","eventDelete","eventLoaded","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","endDate","initEvent","notes","CalendarModal","modalOpen","ui","activeEvent","calendar","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","formvalues","setFormvalues","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","id","console","log","getState","evento","_id","startAddNew","minDate","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","eventos","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","components","view","onDoubleClickEvent","onSelectEvent","onView","onSelectSlot","selectable","PrivateRoute","isAuthenticated","Component","component","rest","props","to","PublicRoute","AppRouter","checking","exact","path","rootReducers","combineReducers","action","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e54eb886.chunk.js","sourcesContent":["const baseUrl = process.env.REACT_APP_API_URL;\r\n\r\nconst fetchWithOutToken = ( endpoint,data, method = 'GET' )=>{\r\n    const url = `${baseUrl}/${endpoint}`;\r\n    if(method === 'GET'){\r\n        return fetch( url );\r\n    }else{\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify( data )\r\n        });\r\n    }\r\n}\r\nconst fetchWithToken = ( endpoint,data = {}, method = 'GET' )=>{\r\n    const url = `${baseUrl}/${endpoint}`;\r\n    const token = localStorage.getItem('token') || '';\r\n    if(method === 'GET'){\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'x-token': token\r\n            }\r\n        } );\r\n    }else{\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'x-token': token\r\n            },\r\n            body: JSON.stringify( data )\r\n        });\r\n    }\r\n}\r\n\r\nexport {\r\n    fetchWithOutToken,\r\n    fetchWithToken\r\n}","export const types = {\r\n\r\n    uiOpenModal: '[ui] Open Modal',\r\n    uiCloseModal: '[ui] Close Modal',\r\n\r\n    eventSetActive: '[event] Set Active',\r\n    eventStartAddNew: '[event] Start Add New',\r\n    eventAddNew: '[event] Add New',\r\n    eventClearActiveEvent: '[event] Clear Active Event',\r\n    eventUpdated: '[event] Event updated',\r\n    eventDelete: '[event] Event delete',\r\n    eventLoaded: '[event] Events Loaded',\r\n\r\n\r\n    authChecking: '[auth] Checking login state',\r\n    authCheckingFinish :'[auth] Finish checking login state',\r\n    authStartLogin: '[auth] Start Login',\r\n    authLogin: '[auth] Login',\r\n    authStartRegister: '[auth] Start Register',\r\n    authStartTokenRenew: '[auth] Start token renew',\r\n    authLogout: '[auth] Logout',\r\n\r\n}","import { fetchWithOutToken, fetchWithToken } from \"../helpers/fetch\";\r\nimport { types } from \"../types/types\";\r\nimport Swal from 'sweetalert2'\r\n\r\nexport const startChecking = ()=>{\r\n    return async(dispatch)=>{\r\n        const resp = await fetchWithToken('auth/renew');\r\n        const body = await resp.json();\r\n        if(body.ok){\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }));\r\n        }else {\r\n            dispatch( checkingFinish());\r\n        }\r\n    }\r\n}\r\nexport const checkingFinish = ()=>({\r\n    type: types.authCheckingFinish\r\n});\r\nexport const startLogin = (email,password)=>{\r\n    return async(dispatch)=>{\r\n        const resp = await fetchWithOutToken('auth',{email,password},'POST');\r\n        const body = await resp.json();\r\n        if(body.ok){\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }));\r\n        }else {\r\n            Swal.fire('Error',body.msg,'error');\r\n        }\r\n    }\r\n} \r\nexport const login = (user)=>({\r\n    type: types.authLogin,\r\n    payload: user\r\n});\r\nexport const startRegister = (name,email,password)=>{\r\n    return async(dispatch)=>{\r\n        const resp = await fetchWithOutToken('auth/new',{\r\n            email,\r\n            name,\r\n            password\r\n        },'POST');\r\n        const body = await resp.json();\r\n        if(body.ok){\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }));\r\n        }else {\r\n            Swal.fire('Error',body.msg,'error');\r\n        }\r\n    }\r\n} \r\n\r\nexport const logout = ()=>({type: types.authLogout});\r\nexport const startLogout = ()=>{\r\n    return (dispatch)=>{\r\n        localStorage.clear();\r\n        dispatch( logout() );\r\n    }\r\n}","import { useState } from 'react';\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues( initialState );\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport './login.css';\r\nimport {useForm} from '../../hooks/useForm';\r\nimport validator from 'validator'\r\nimport { startLogin, startRegister } from '../../actions/auth';\r\nimport Swal from 'sweetalert2';\r\n\r\nexport const LoginScreen = () => {\r\n    \r\n    const [isFormValid, setIsFormValid] = useState({\r\n        vEmail: false,\r\n        vPassword: false\r\n    });\r\n    const dispatch = useDispatch();\r\n    const { vEmail, vPassword} = isFormValid;\r\n\r\n    const [formLoginValues,handleLoginInputChange] = useForm({\r\n        lEmail: 'nicolas2@gmail.com',\r\n        lPassword: '12312345464',\r\n    });\r\n    const [formRegisterValues,handleRegisterInputChange] = useForm({\r\n        rName: 'Nico',\r\n        rEmail: 'nicolas10@gmail.com',\r\n        rPassword1: '123123',\r\n        rPassword2: '123123',\r\n    });\r\n    const {rName, rEmail,rPassword1,rPassword2} = formRegisterValues;\r\n\r\n    const { lEmail, lPassword } = formLoginValues;\r\n\r\n    const handleLogin = (e)=>{\r\n        e.preventDefault();\r\n        if( !validator.isEmail(lEmail)){\r\n            setIsFormValid({...isFormValid, vEmail: true});\r\n            return;\r\n        }else if(lPassword.trim().length < 6){\r\n            setIsFormValid({...isFormValid, vPassword: true});\r\n            return;\r\n        }\r\n        setIsFormValid({\r\n            vEmail: false,\r\n            vPassword: false\r\n        });\r\n        dispatch( startLogin(lEmail,lPassword) );\r\n    }\r\n    const handleRegister = (e)=>{\r\n        e.preventDefault();\r\n        if(rPassword1 !== rPassword2){\r\n            return Swal.fire('Error','Las contrase√±as deben ser iguales','error');\r\n        }else if( !validator.isEmail(rEmail)){\r\n            return Swal.fire('Error','Email no valido','error');\r\n        }else if(rPassword1.trim().length < 6){\r\n            return Swal.fire('Error','La contrase√±a debe tener 6 caracteres o mas','error');\r\n        }\r\n        dispatch( startRegister(rName,rEmail,rPassword1));\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Ingreso</h3>\r\n                    <form onSubmit={handleLogin}>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"text\"\r\n                                className={`form-control ${ vEmail && 'is-invalid' }`}\r\n                                placeholder=\"Correo\"\r\n                                autoComplete=\"off\"\r\n                                name=\"lEmail\"\r\n                                value={lEmail}\r\n                                onChange={handleLoginInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className={`form-control ${ vPassword && 'is-invalid' }`}\r\n                                placeholder=\"Contrase√±a\"\r\n                                autoComplete=\"off\"\r\n                                name=\"lPassword\"\r\n                                value={lPassword}\r\n                                onChange={handleLoginInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\" \r\n                                autoComplete=\"off\"\r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Registro</h3>\r\n                    <form onSubmit={handleRegister}>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nombre\"\r\n                                autoComplete=\"off\"\r\n                                name=\"rName\"\r\n                                value={rName}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                autoComplete=\"off\"\r\n                                name=\"rEmail\"\r\n                                value={rEmail}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contrase√±a\" \r\n                                autoComplete=\"off\"\r\n                                name=\"rPassword1\"\r\n                                value={rPassword1}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Repita la contrase√±a\" \r\n                                autoComplete=\"off\"\r\n                                name=\"rPassword2\"\r\n                                value={rPassword2}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\" \r\n                                className=\"btnSubmit\" \r\n                                autoComplete=\"off\"\r\n                                value=\"Crear cuenta\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startLogout } from '../../actions/auth';\r\n\r\nexport const Navbar = () => {\r\n\r\n    const {name} = useSelector( state => state.auth );\r\n    const dispatch = useDispatch();\r\n\r\n    const handleLogout = ()=>{\r\n        dispatch( startLogout() );\r\n    }\r\n    return (\r\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\r\n            <span className=\"navbar-brand\">\r\n                {name}\r\n            </span>\r\n            <button className=\"btn btn-outline-danger\"\r\n                    onClick={handleLogout}\r\n            >\r\n                <i className=\"fas fa-sign-out-alt\"></i>\r\n                <span> Salir</span>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","export const messages = {\r\n    allDay: 'Todo el d√≠a',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'D√≠a',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver m√°s (${total})`\r\n};","import React from 'react'\r\n\r\nexport const CalendarEvent = ({event}) => {\r\n    \r\n    const {title,user} = event;\r\n    return (\r\n        <div>\r\n            <strong>{ title }</strong>\r\n            <span>- { user.name }</span>\r\n        </div>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nexport const uiOpenModal = ()=>({type: types.uiOpenModal});\r\nexport const uiCloseModal = ()=>({type: types.uiCloseModal});","import moment from 'moment'\r\n\r\nexport const prepareEvents = ( events = [] )=>{\r\n    return events.map( \r\n        (event)=>({\r\n            ...event,\r\n            end: moment( event.end ).toDate(),\r\n            start: moment( event.start ).toDate(),\r\n        })\r\n    )\r\n}   ","import Swal from \"sweetalert2\";\r\nimport { fetchWithToken } from \"../helpers/fetch\";\r\nimport { prepareEvents } from \"../helpers/prepareEvents\";\r\nimport { types } from \"../types/types\"\r\n\r\nexport const startAddNew = (event)=>{\r\n    return async(dispatch, getState)=>{\r\n        const {uid, name} = getState().auth;\r\n        try {\r\n            const resp = await fetchWithToken('events',event, 'POST');\r\n            const body = await resp.json();\r\n            if(body.ok){\r\n                event.id = body.evento.id;\r\n                event.user = {\r\n                    _id: uid,\r\n                    name: name\r\n                }\r\n                dispatch( eventAddNew( event ) );\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n        \r\n    }\r\n}\r\n\r\nconst eventAddNew = (event) => ({\r\n    type: types.eventAddNew,\r\n    payload: event\r\n});\r\nexport const eventsSetActive = (event) => ({\r\n    type: types.eventSetActive,\r\n    payload: event\r\n});\r\nexport const eventsClearActiveEvent = () => ({\r\n    type: types.eventClearActiveEvent\r\n});\r\n\r\nexport const eventStartUpdate = (event)=>{\r\n    return async(dispatch)=>{\r\n        try {\r\n            const resp = await fetchWithToken( `events/${event.id}`,event, 'PUT');\r\n            const body = await resp.json();\r\n            if(body.ok){\r\n                console.log(event);\r\n                dispatch( eventUpdated(event) );\r\n            }else{\r\n                Swal.fire('Error',body.msg,'error');\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nconst eventUpdated = (event)=>({\r\n    type: types.eventUpdated,\r\n    payload: event\r\n});\r\n\r\nexport const eventStartDelete = ()=>{\r\n    return async(dispatch,getState)=>{\r\n        const {id} = getState().calendar.activeEvent;\r\n        try {\r\n            const resp = await fetchWithToken( `events/${id}`,{}, 'DELETE');\r\n            const body = await resp.json();\r\n            if(body.ok){\r\n                dispatch( eventDelete() );\r\n            }else{\r\n                Swal.fire('Error',body.msg,'error');\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\nexport const eventDelete = ()=>({\r\n    type: types.eventDelete\r\n});\r\n\r\n\r\nexport const eventStartLoading = ()=>{\r\n    return async(dispatch)=>{\r\n        try {\r\n            const resp = await fetchWithToken('events');\r\n            const body = await resp.json();\r\n\r\n            const events =  prepareEvents(body.eventos);\r\n            dispatch( eventLoaded(events) );\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\nexport const eventLoaded = (events)=>({\r\n    type: types.eventLoaded,\r\n    payload: events\r\n})\r\n","import React, { useEffect, useState } from 'react'\r\nimport {useSelector,useDispatch} from 'react-redux'\r\nimport Modal from 'react-modal';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport Swal from 'sweetalert2'\r\nimport moment from 'moment';\r\nimport { uiCloseModal } from '../../actions/ui';\r\nimport { eventAddNew, eventsClearActiveEvent, eventStartUpdate, startAddNew } from '../../actions/events';\r\nconst customStyles = {\r\n    content : {\r\n      top                   : '50%',\r\n      left                  : '50%',\r\n      right                 : 'auto',\r\n      bottom                : 'auto',\r\n      marginRight           : '-50%',\r\n      transform             : 'translate(-50%, -50%)'\r\n    }\r\n};\r\n\r\nModal.setAppElement('#root');\r\n\r\nconst now = moment().minutes(0).seconds(0).add(1,'hours');\r\nconst endDate = moment(now).add(1,'hours');\r\n\r\nconst initEvent = {\r\n    title: '',\r\n    notes: '',\r\n    start: now.toDate(),\r\n    end: endDate.toDate()\r\n}\r\n\r\nexport const CalendarModal = () => {\r\n    const {modalOpen} = useSelector( state => state.ui );\r\n    const {activeEvent} = useSelector( state => state.calendar );\r\n    const dispatch = useDispatch();\r\n\r\n    const [dateStart, setDateStart] = useState(now.toDate());\r\n    const [dateEnd, setDateEnd] = useState(endDate.toDate());\r\n    const [titleValid, setTitleValid] = useState(true);\r\n    const [formvalues, setFormvalues] = useState(initEvent);\r\n    const { title,notes,start,end } = formvalues;\r\n\r\n    useEffect(() => {\r\n        if(activeEvent){\r\n            setFormvalues( activeEvent );\r\n        }else{\r\n            setFormvalues( initEvent );\r\n        }\r\n\r\n    }, [activeEvent,setFormvalues])\r\n\r\n\r\n    const handleInputChange = ({target})=>{\r\n        setFormvalues({\r\n            ...formvalues,\r\n            [target.name]: target.value\r\n        });\r\n    }\r\n    const closeModal = ()=>{\r\n        dispatch( uiCloseModal() );\r\n        dispatch( eventsClearActiveEvent() );\r\n        setFormvalues(initEvent);\r\n    }\r\n    const handleStartDateChange = (e)=>{\r\n        setDateStart( e );\r\n        setFormvalues({\r\n            ...formvalues,\r\n            start: e\r\n        });\r\n    }\r\n    const handleEndDateChange = (e)=>{\r\n        setDateEnd( e );\r\n        setFormvalues({\r\n            ...formvalues,\r\n           end: e\r\n        });\r\n    }\r\n    const handleOnSubmit = (e)=>{\r\n        e.preventDefault();\r\n        const momentStart = moment(start);\r\n        const momentEnd = moment(end);\r\n        if( momentStart.isSameOrAfter( momentEnd ) ){\r\n            return Swal.fire('Error','La fecha fin debe ser mayor a la fecha de inicio','error');\r\n        }\r\n        if(title.trim().length < 2){\r\n            setTitleValid(false);\r\n            return;\r\n        }\r\n        if( activeEvent ){\r\n            dispatch( eventStartUpdate(formvalues) );\r\n        }else{\r\n            dispatch( startAddNew(formvalues) );\r\n\r\n        }\r\n        setTitleValid(true);\r\n        closeModal();\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n          isOpen={ modalOpen }\r\n          /* onAfterOpen={afterOpenModal} */\r\n          onRequestClose={closeModal} \r\n          style={customStyles}\r\n          closeTimeoutMS={200}\r\n          className=\"modal\"\r\n          overlayClassName=\"modal-fondo\"\r\n        >\r\n            <h1>{ (activeEvent) ? \"Editar Evento\" : \"Nuevo Evento\" }</h1>\r\n            <hr />\r\n            <form   className=\"container\"\r\n                    onSubmit={handleOnSubmit}\r\n            >\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora inicio</label>\r\n                    <DateTimePicker\r\n                        onChange={handleStartDateChange}\r\n                        value={dateStart}\r\n                        className=\"form-control\"\r\n                        \r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora fin</label>\r\n                    <DateTimePicker\r\n                        onChange={handleEndDateChange}\r\n                        value={dateEnd}\r\n                        className=\"form-control\"\r\n                        minDate={dateStart}\r\n                    />\r\n                </div>\r\n\r\n                <hr />\r\n                <div className=\"form-group\">\r\n                    <label>Titulo y notas</label>\r\n                    <input \r\n                        type=\"text\" \r\n                        className={`form-control ${ !titleValid && 'is-invalid' }`}\r\n                        placeholder=\"T√≠tulo del evento\"\r\n                        name=\"title\"\r\n                        autoComplete=\"off\"\r\n                        value={ title }\r\n                        onChange={ handleInputChange }\r\n                    />\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripci√≥n corta</small>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <textarea \r\n                        type=\"text\" \r\n                        className=\"form-control\"\r\n                        placeholder=\"Notas\"\r\n                        rows=\"5\"\r\n                        name=\"notes\"\r\n                        value={ notes }\r\n                        onChange={ handleInputChange }\r\n                    ></textarea>\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Informaci√≥n adicional</small>\r\n                </div>\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-primary btn-block\"\r\n                >\r\n                    <i className=\"far fa-save\"></i>\r\n                    <span> Guardar</span>\r\n                </button>\r\n\r\n            </form>\r\n        </Modal>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {useDispatch} from 'react-redux'\r\nimport { eventsClearActiveEvent } from '../../actions/events';\r\nimport { uiOpenModal } from '../../actions/ui';\r\n\r\nexport const AddNewFab = () => {\r\n    const dispatch = useDispatch();\r\n    const handleClick = ()=>{\r\n        dispatch( eventsClearActiveEvent() );\r\n        dispatch( uiOpenModal() );\r\n    }\r\n    return (\r\n        <button\r\n            className=\"btn btn-primary fab\"\r\n            onClick={handleClick}\r\n        >\r\n            <i className=\"fas fa-plus\"></i>\r\n        </button>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {useDispatch} from 'react-redux'\r\nimport { eventDelete, eventsClearActiveEvent, eventStartDelete } from '../../actions/events';\r\nimport { uiOpenModal } from '../../actions/ui';\r\n\r\nexport const DeleteEventFab = () => {\r\n    const dispatch = useDispatch();\r\n    const handleClick = ()=>{\r\n        dispatch( eventStartDelete() );\r\n    }\r\n    return (\r\n        <button\r\n            className=\"btn btn-danger fab-danger\"\r\n            onClick={handleClick}\r\n        >\r\n            <i className=\"fas fa-trash\"></i>\r\n            <span>Borrar evento</span>\r\n        </button>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport {useDispatch,useSelector} from 'react-redux';\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\r\nimport moment from 'moment';\r\nimport 'moment/locale/es';\r\n\r\nimport { Navbar } from '../ui/Navbar'\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport { messages } from '../../helpers/calendarMessagesEspa√±ol';\r\nimport { CalendarEvent } from './CalendarEvent';\r\nimport { CalendarModal } from './CalendarModal';\r\nimport { uiOpenModal } from '../../actions/ui';\r\nimport { eventsClearActiveEvent, eventsSetActive, eventStartLoading } from '../../actions/events';\r\nimport { AddNewFab } from '../ui/AddNewFab';\r\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\r\n\r\nmoment.locale('es');\r\nconst localizer = momentLocalizer(moment);\r\n\r\n/* const events = [{\r\n    title: 'Cumplea√±os del jefe',\r\n    start: moment().toDate(),\r\n    end: moment().add(2,'hour').toDate(),\r\n    bgcolor: '#fafafa',\r\n    notes: 'Comprar el pastel',\r\n    user: {\r\n        _id: '123',\r\n        name: 'Nicolas'\r\n    }\r\n}] */\r\n\r\nexport const CalendarScreen = () => {\r\n    const [lastView, setLastView] = useState(localStorage.getItem('lastView') || 'month');\r\n    const dispatch = useDispatch();\r\n    const {events,activeEvent} = useSelector( state => state.calendar );\r\n    const {uid} = useSelector( state => state.auth );\r\n\r\n    useEffect(() => {\r\n        dispatch( eventStartLoading() );\r\n    }, [dispatch]);\r\n    \r\n    const onDoubleClick = (e)=>{\r\n        console.log(e);\r\n        dispatch( uiOpenModal() );\r\n    }\r\n    const onSelectEvent = (e)=>{\r\n        dispatch( eventsSetActive(e) );\r\n    }\r\n    const onViewChange = (e)=>{\r\n        setLastView(e);\r\n        localStorage.setItem('lastView',e);\r\n    }\r\n    const onSelectSlot = (e)=>{\r\n        dispatch( eventsClearActiveEvent() );\r\n    }\r\n    const eventStyleGetter = ( event,start,end,isSelected )=>{\r\n        const style = {\r\n            backgroundColor: (uid === event.user._id)  ? '#367CF7' : '#465660',\r\n            borderRadius: '0px',\r\n            opacity: 0.8,\r\n            display: 'block',\r\n            color: 'white',\r\n        }\r\n        return {\r\n            style\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"calendar-screen\">\r\n            <Navbar />\r\n            <Calendar\r\n                localizer={localizer}\r\n                events={events}\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n                messages={messages}\r\n                eventPropGetter={eventStyleGetter}\r\n                components={{\r\n                    event: CalendarEvent\r\n                }}\r\n                view={lastView}\r\n                onDoubleClickEvent={onDoubleClick}\r\n                onSelectEvent={onSelectEvent}\r\n                onView={onViewChange}\r\n                onSelectSlot={onSelectSlot}\r\n                selectable={true}\r\n                \r\n            />\r\n            <AddNewFab />\r\n            {\r\n                (activeEvent) &&\r\n                <DeleteEventFab />\r\n            }\r\n            <CalendarModal />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    return (\r\n        <Route { ...rest }\r\n            component={ (props) => (\r\n                ( isAuthenticated )\r\n                    ? ( <Component { ...props } /> )\r\n                    : ( <Redirect to=\"/login\" /> )\r\n            )}\r\n        \r\n        />\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    return (\r\n        <Route { ...rest }\r\n            component={ (props) => (\r\n                ( isAuthenticated )\r\n                    ? ( <Redirect to=\"/\" /> )\r\n                    : ( <Component { ...props } /> )\r\n            )}\r\n        \r\n        />\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Redirect,\r\n    Switch } from \"react-router-dom\";\r\nimport { startChecking } from '../actions/auth';\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { checking,uid} = useSelector( state => state.auth );\r\n\r\n    useEffect(() => {\r\n        dispatch( startChecking());\r\n    }, [dispatch]);\r\n\r\n    if(checking){\r\n        return <h5>Espere....</h5>;\r\n    }\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <PublicRoute \r\n                        exact\r\n                        path=\"/login\" \r\n                        component={LoginScreen} \r\n                        isAuthenticated={!!uid}\r\n                    />\r\n                    <PrivateRoute \r\n                        exact \r\n                        path=\"/\" \r\n                        component={CalendarScreen} \r\n                        isAuthenticated={!!uid}\r\n                    />\r\n                    <Redirect to=\"/\"/>\r\n                 </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    checking: true,\r\n   /*  uid: null,\r\n    name: null */\r\n}\r\n\r\nexport const authReducer = (state = initialState,action) => {\r\n    switch (action.type) {\r\n        case types.authLogin:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                checking: false,\r\n            }\r\n        case types.authCheckingFinish:\r\n            return {\r\n                ...state,\r\n                checking: false\r\n            }\r\n        case types.authLogout:\r\n            return {\r\n                checking: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { types } from '../types/types';\r\n\r\nconst initialState = {\r\n    events: [],\r\n    activeEvent: null\r\n}\r\n\r\n\r\nexport const calendarReducer = (state = initialState,action)=>{\r\n    switch (action.type) {\r\n        case types.eventSetActive:\r\n            return {\r\n                ...state,\r\n                activeEvent: action.payload\r\n            }\r\n        case types.eventAddNew:\r\n            return {\r\n                ...state,\r\n                events: [ ...state.events, action.payload ]\r\n            }\r\n        case types.eventClearActiveEvent:\r\n            return {\r\n                ...state,\r\n                activeEvent: null\r\n            }\r\n        case types.eventUpdated:\r\n            return {\r\n                ...state,\r\n                events: state.events.map(\r\n                    e => (e.id === action.payload.id ) ? action.payload : e\r\n                )\r\n            }\r\n        case types.eventDelete:\r\n            return {\r\n                ...state,\r\n                events: state.events.filter(\r\n                    e => (e.id !==state.activeEvent.id )\r\n                ),\r\n                activeEvent: null\r\n            }\r\n        case types.eventLoaded:\r\n            return {\r\n                ...state,\r\n                events: [...action.payload]\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import {types} from '../types/types';\r\n\r\nconst initialState = {\r\n    modalOpen: false\r\n}\r\nexport const uiReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.uiOpenModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: true\r\n            }\r\n        case types.uiCloseModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {combineReducers} from 'redux'\r\nimport { authReducer } from './authReducer';\r\nimport { calendarReducer } from './calendarReducer';\r\nimport { uiReducer } from './uiReducer'\r\n\r\nexport const rootReducers = combineReducers({\r\n    ui: uiReducer,\r\n    calendar: calendarReducer,\r\n    auth: authReducer\r\n});\r\n","import {createStore,compose,applyMiddleware} from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { rootReducers } from '../reducers/rootReducers'\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\nexport const store = createStore(\r\n    rootReducers,\r\n    composeEnhancers(\r\n        applyMiddleware( thunk )\r\n    )\r\n);","import React from 'react'\r\nimport {Provider} from 'react-redux';\r\nimport { AppRouter } from './router/AppRouter'\r\nimport { store } from './store/store';\r\n\r\nexport const CalendarApp = () => {\r\n    return (\r\n        <Provider store={store}>\r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\nimport './styles.css'\nReactDOM.render(\n    <CalendarApp />,document.getElementById('root')\n);\n"],"sourceRoot":""}